name: Compiler Linux Kernel
on:
  push:
    branches: main
  pull_request:
  workflow_dispatch:
    
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        defconfig: [allnoconfig,allnoconfig]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y gcc make build-essential libncurses-dev wget curl tar bison flex libssl-dev grep sed
          
      - name: Download and extract latest kernel
        run: |
            latest_version=$(curl -s https://www.kernel.org/finger_banner | grep -m1 "$1" | sed -r 's/^.+: +([^ ]+)( .+)?$/\1/')
            if [ ! -f linux-${latest_version}.tar.xz ];then
            wget https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-${latest_version}.tar.xz
            fi
            if [ ! -d linux-${latest_version} ];then
            tar -xvf linux-${latest_version}.tar.xz
            fi
            cd linux-${latest_version}

      #- name: Cache ccache
      #  uses: actions/cache@v2
      #  with:
      #    path: ~/.ccache
      #    key: ${{ matrix.defconfig }}

      - name: Building Kernel
        run: |
            export CFLAGS="-march=silvermont -mtune=silvermont -m3dnow -m3dnowa -mfpmath=sse -Os"
            export CXXFLAGS="-march=silvermont -mtune=silvermont -m3dnow -m3dnowa -mfpmath=sse -Os"
            # Build only minimal debug info to reduce size
            CFLAGS+=' -g1'
            CXXFLAGS+=' -g1'
            ls
            make ${{ matrix.defconfig }}
            make -j$(nproc)

      - name: Upload Kernel Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Kernel Image
          path: arch/*/boot/zImage
